using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalRis
{
	/// <summary>
	/// Strongly-typed collection for the PsmDatosOld class.
	/// </summary>
    [Serializable]
	public partial class PsmDatosOldCollection : ActiveList<PsmDatosOld, PsmDatosOldCollection>
	{	   
		public PsmDatosOldCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>PsmDatosOldCollection</returns>
		public PsmDatosOldCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                PsmDatosOld o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the PSM_Datos_OLD table.
	/// </summary>
	[Serializable]
	public partial class PsmDatosOld : ActiveRecord<PsmDatosOld>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public PsmDatosOld()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public PsmDatosOld(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public PsmDatosOld(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public PsmDatosOld(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("PSM_Datos_OLD", TableType.Table, DataService.GetInstance("RisProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdProsame = new TableSchema.TableColumn(schema);
				colvarIdProsame.ColumnName = "idProsame";
				colvarIdProsame.DataType = DbType.Decimal;
				colvarIdProsame.MaxLength = 0;
				colvarIdProsame.AutoIncrement = false;
				colvarIdProsame.IsNullable = false;
				colvarIdProsame.IsPrimaryKey = true;
				colvarIdProsame.IsForeignKey = false;
				colvarIdProsame.IsReadOnly = false;
				colvarIdProsame.DefaultSetting = @"";
				colvarIdProsame.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdProsame);
				
				TableSchema.TableColumn colvarIdPaciente = new TableSchema.TableColumn(schema);
				colvarIdPaciente.ColumnName = "idPaciente";
				colvarIdPaciente.DataType = DbType.Decimal;
				colvarIdPaciente.MaxLength = 0;
				colvarIdPaciente.AutoIncrement = false;
				colvarIdPaciente.IsNullable = false;
				colvarIdPaciente.IsPrimaryKey = true;
				colvarIdPaciente.IsForeignKey = false;
				colvarIdPaciente.IsReadOnly = false;
				colvarIdPaciente.DefaultSetting = @"";
				colvarIdPaciente.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPaciente);
				
				TableSchema.TableColumn colvarIdEfector = new TableSchema.TableColumn(schema);
				colvarIdEfector.ColumnName = "idEfector";
				colvarIdEfector.DataType = DbType.Decimal;
				colvarIdEfector.MaxLength = 0;
				colvarIdEfector.AutoIncrement = false;
				colvarIdEfector.IsNullable = false;
				colvarIdEfector.IsPrimaryKey = true;
				colvarIdEfector.IsForeignKey = false;
				colvarIdEfector.IsReadOnly = false;
				colvarIdEfector.DefaultSetting = @"";
				colvarIdEfector.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdEfector);
				
				TableSchema.TableColumn colvarIdEstablecimiento = new TableSchema.TableColumn(schema);
				colvarIdEstablecimiento.ColumnName = "idEstablecimiento";
				colvarIdEstablecimiento.DataType = DbType.Decimal;
				colvarIdEstablecimiento.MaxLength = 0;
				colvarIdEstablecimiento.AutoIncrement = false;
				colvarIdEstablecimiento.IsNullable = true;
				colvarIdEstablecimiento.IsPrimaryKey = false;
				colvarIdEstablecimiento.IsForeignKey = false;
				colvarIdEstablecimiento.IsReadOnly = false;
				colvarIdEstablecimiento.DefaultSetting = @"";
				colvarIdEstablecimiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdEstablecimiento);
				
				TableSchema.TableColumn colvarPrematuro = new TableSchema.TableColumn(schema);
				colvarPrematuro.ColumnName = "Prematuro";
				colvarPrematuro.DataType = DbType.String;
				colvarPrematuro.MaxLength = 2;
				colvarPrematuro.AutoIncrement = false;
				colvarPrematuro.IsNullable = true;
				colvarPrematuro.IsPrimaryKey = false;
				colvarPrematuro.IsForeignKey = false;
				colvarPrematuro.IsReadOnly = false;
				colvarPrematuro.DefaultSetting = @"";
				colvarPrematuro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrematuro);
				
				TableSchema.TableColumn colvarTutorDNI = new TableSchema.TableColumn(schema);
				colvarTutorDNI.ColumnName = "TutorDNI";
				colvarTutorDNI.DataType = DbType.Decimal;
				colvarTutorDNI.MaxLength = 0;
				colvarTutorDNI.AutoIncrement = false;
				colvarTutorDNI.IsNullable = true;
				colvarTutorDNI.IsPrimaryKey = false;
				colvarTutorDNI.IsForeignKey = false;
				colvarTutorDNI.IsReadOnly = false;
				colvarTutorDNI.DefaultSetting = @"";
				colvarTutorDNI.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTutorDNI);
				
				TableSchema.TableColumn colvarTutorNombre = new TableSchema.TableColumn(schema);
				colvarTutorNombre.ColumnName = "TutorNombre";
				colvarTutorNombre.DataType = DbType.String;
				colvarTutorNombre.MaxLength = 100;
				colvarTutorNombre.AutoIncrement = false;
				colvarTutorNombre.IsNullable = true;
				colvarTutorNombre.IsPrimaryKey = false;
				colvarTutorNombre.IsForeignKey = false;
				colvarTutorNombre.IsReadOnly = false;
				colvarTutorNombre.DefaultSetting = @"";
				colvarTutorNombre.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTutorNombre);
				
				TableSchema.TableColumn colvarSobreEdad = new TableSchema.TableColumn(schema);
				colvarSobreEdad.ColumnName = "SobreEdad";
				colvarSobreEdad.DataType = DbType.String;
				colvarSobreEdad.MaxLength = 2;
				colvarSobreEdad.AutoIncrement = false;
				colvarSobreEdad.IsNullable = true;
				colvarSobreEdad.IsPrimaryKey = false;
				colvarSobreEdad.IsForeignKey = false;
				colvarSobreEdad.IsReadOnly = false;
				colvarSobreEdad.DefaultSetting = @"";
				colvarSobreEdad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSobreEdad);
				
				TableSchema.TableColumn colvarRepitente = new TableSchema.TableColumn(schema);
				colvarRepitente.ColumnName = "Repitente";
				colvarRepitente.DataType = DbType.String;
				colvarRepitente.MaxLength = 2;
				colvarRepitente.AutoIncrement = false;
				colvarRepitente.IsNullable = true;
				colvarRepitente.IsPrimaryKey = false;
				colvarRepitente.IsForeignKey = false;
				colvarRepitente.IsReadOnly = false;
				colvarRepitente.DefaultSetting = @"";
				colvarRepitente.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRepitente);
				
				TableSchema.TableColumn colvarPeso = new TableSchema.TableColumn(schema);
				colvarPeso.ColumnName = "Peso";
				colvarPeso.DataType = DbType.Decimal;
				colvarPeso.MaxLength = 0;
				colvarPeso.AutoIncrement = false;
				colvarPeso.IsNullable = true;
				colvarPeso.IsPrimaryKey = false;
				colvarPeso.IsForeignKey = false;
				colvarPeso.IsReadOnly = false;
				colvarPeso.DefaultSetting = @"";
				colvarPeso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPeso);
				
				TableSchema.TableColumn colvarTalla = new TableSchema.TableColumn(schema);
				colvarTalla.ColumnName = "Talla";
				colvarTalla.DataType = DbType.Decimal;
				colvarTalla.MaxLength = 0;
				colvarTalla.AutoIncrement = false;
				colvarTalla.IsNullable = true;
				colvarTalla.IsPrimaryKey = false;
				colvarTalla.IsForeignKey = false;
				colvarTalla.IsReadOnly = false;
				colvarTalla.DefaultSetting = @"";
				colvarTalla.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTalla);
				
				TableSchema.TableColumn colvarImc = new TableSchema.TableColumn(schema);
				colvarImc.ColumnName = "IMC";
				colvarImc.DataType = DbType.Decimal;
				colvarImc.MaxLength = 0;
				colvarImc.AutoIncrement = false;
				colvarImc.IsNullable = true;
				colvarImc.IsPrimaryKey = false;
				colvarImc.IsForeignKey = false;
				colvarImc.IsReadOnly = false;
				colvarImc.DefaultSetting = @"";
				colvarImc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarImc);
				
				TableSchema.TableColumn colvarTaMax = new TableSchema.TableColumn(schema);
				colvarTaMax.ColumnName = "TaMax";
				colvarTaMax.DataType = DbType.Decimal;
				colvarTaMax.MaxLength = 0;
				colvarTaMax.AutoIncrement = false;
				colvarTaMax.IsNullable = true;
				colvarTaMax.IsPrimaryKey = false;
				colvarTaMax.IsForeignKey = false;
				colvarTaMax.IsReadOnly = false;
				colvarTaMax.DefaultSetting = @"";
				colvarTaMax.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaMax);
				
				TableSchema.TableColumn colvarTaMin = new TableSchema.TableColumn(schema);
				colvarTaMin.ColumnName = "TaMin";
				colvarTaMin.DataType = DbType.Decimal;
				colvarTaMin.MaxLength = 0;
				colvarTaMin.AutoIncrement = false;
				colvarTaMin.IsNullable = true;
				colvarTaMin.IsPrimaryKey = false;
				colvarTaMin.IsForeignKey = false;
				colvarTaMin.IsReadOnly = false;
				colvarTaMin.DefaultSetting = @"";
				colvarTaMin.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaMin);
				
				TableSchema.TableColumn colvarPercentiloPeso = new TableSchema.TableColumn(schema);
				colvarPercentiloPeso.ColumnName = "PercentiloPeso";
				colvarPercentiloPeso.DataType = DbType.Decimal;
				colvarPercentiloPeso.MaxLength = 0;
				colvarPercentiloPeso.AutoIncrement = false;
				colvarPercentiloPeso.IsNullable = true;
				colvarPercentiloPeso.IsPrimaryKey = false;
				colvarPercentiloPeso.IsForeignKey = false;
				colvarPercentiloPeso.IsReadOnly = false;
				colvarPercentiloPeso.DefaultSetting = @"";
				colvarPercentiloPeso.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentiloPeso);
				
				TableSchema.TableColumn colvarPercentiloTalla = new TableSchema.TableColumn(schema);
				colvarPercentiloTalla.ColumnName = "PercentiloTalla";
				colvarPercentiloTalla.DataType = DbType.Decimal;
				colvarPercentiloTalla.MaxLength = 0;
				colvarPercentiloTalla.AutoIncrement = false;
				colvarPercentiloTalla.IsNullable = true;
				colvarPercentiloTalla.IsPrimaryKey = false;
				colvarPercentiloTalla.IsForeignKey = false;
				colvarPercentiloTalla.IsReadOnly = false;
				colvarPercentiloTalla.DefaultSetting = @"";
				colvarPercentiloTalla.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentiloTalla);
				
				TableSchema.TableColumn colvarPercentiloIMC = new TableSchema.TableColumn(schema);
				colvarPercentiloIMC.ColumnName = "PercentiloIMC";
				colvarPercentiloIMC.DataType = DbType.Decimal;
				colvarPercentiloIMC.MaxLength = 0;
				colvarPercentiloIMC.AutoIncrement = false;
				colvarPercentiloIMC.IsNullable = true;
				colvarPercentiloIMC.IsPrimaryKey = false;
				colvarPercentiloIMC.IsForeignKey = false;
				colvarPercentiloIMC.IsReadOnly = false;
				colvarPercentiloIMC.DefaultSetting = @"";
				colvarPercentiloIMC.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentiloIMC);
				
				TableSchema.TableColumn colvarPercentiloMax = new TableSchema.TableColumn(schema);
				colvarPercentiloMax.ColumnName = "PercentiloMax";
				colvarPercentiloMax.DataType = DbType.Decimal;
				colvarPercentiloMax.MaxLength = 0;
				colvarPercentiloMax.AutoIncrement = false;
				colvarPercentiloMax.IsNullable = true;
				colvarPercentiloMax.IsPrimaryKey = false;
				colvarPercentiloMax.IsForeignKey = false;
				colvarPercentiloMax.IsReadOnly = false;
				colvarPercentiloMax.DefaultSetting = @"";
				colvarPercentiloMax.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentiloMax);
				
				TableSchema.TableColumn colvarPercentiloMin = new TableSchema.TableColumn(schema);
				colvarPercentiloMin.ColumnName = "PercentiloMin";
				colvarPercentiloMin.DataType = DbType.Decimal;
				colvarPercentiloMin.MaxLength = 0;
				colvarPercentiloMin.AutoIncrement = false;
				colvarPercentiloMin.IsNullable = true;
				colvarPercentiloMin.IsPrimaryKey = false;
				colvarPercentiloMin.IsForeignKey = false;
				colvarPercentiloMin.IsReadOnly = false;
				colvarPercentiloMin.DefaultSetting = @"";
				colvarPercentiloMin.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentiloMin);
				
				TableSchema.TableColumn colvarEFPielFanera = new TableSchema.TableColumn(schema);
				colvarEFPielFanera.ColumnName = "EFPielFanera";
				colvarEFPielFanera.DataType = DbType.Decimal;
				colvarEFPielFanera.MaxLength = 0;
				colvarEFPielFanera.AutoIncrement = false;
				colvarEFPielFanera.IsNullable = true;
				colvarEFPielFanera.IsPrimaryKey = false;
				colvarEFPielFanera.IsForeignKey = false;
				colvarEFPielFanera.IsReadOnly = false;
				colvarEFPielFanera.DefaultSetting = @"";
				colvarEFPielFanera.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFPielFanera);
				
				TableSchema.TableColumn colvarEFCardiovascular = new TableSchema.TableColumn(schema);
				colvarEFCardiovascular.ColumnName = "EFCardiovascular";
				colvarEFCardiovascular.DataType = DbType.Decimal;
				colvarEFCardiovascular.MaxLength = 0;
				colvarEFCardiovascular.AutoIncrement = false;
				colvarEFCardiovascular.IsNullable = true;
				colvarEFCardiovascular.IsPrimaryKey = false;
				colvarEFCardiovascular.IsForeignKey = false;
				colvarEFCardiovascular.IsReadOnly = false;
				colvarEFCardiovascular.DefaultSetting = @"";
				colvarEFCardiovascular.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFCardiovascular);
				
				TableSchema.TableColumn colvarEFRespiratorio = new TableSchema.TableColumn(schema);
				colvarEFRespiratorio.ColumnName = "EFRespiratorio";
				colvarEFRespiratorio.DataType = DbType.Decimal;
				colvarEFRespiratorio.MaxLength = 0;
				colvarEFRespiratorio.AutoIncrement = false;
				colvarEFRespiratorio.IsNullable = true;
				colvarEFRespiratorio.IsPrimaryKey = false;
				colvarEFRespiratorio.IsForeignKey = false;
				colvarEFRespiratorio.IsReadOnly = false;
				colvarEFRespiratorio.DefaultSetting = @"";
				colvarEFRespiratorio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFRespiratorio);
				
				TableSchema.TableColumn colvarEFGenital = new TableSchema.TableColumn(schema);
				colvarEFGenital.ColumnName = "EFGenital";
				colvarEFGenital.DataType = DbType.Decimal;
				colvarEFGenital.MaxLength = 0;
				colvarEFGenital.AutoIncrement = false;
				colvarEFGenital.IsNullable = true;
				colvarEFGenital.IsPrimaryKey = false;
				colvarEFGenital.IsForeignKey = false;
				colvarEFGenital.IsReadOnly = false;
				colvarEFGenital.DefaultSetting = @"";
				colvarEFGenital.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFGenital);
				
				TableSchema.TableColumn colvarEFAbdomen = new TableSchema.TableColumn(schema);
				colvarEFAbdomen.ColumnName = "EFAbdomen";
				colvarEFAbdomen.DataType = DbType.Decimal;
				colvarEFAbdomen.MaxLength = 0;
				colvarEFAbdomen.AutoIncrement = false;
				colvarEFAbdomen.IsNullable = true;
				colvarEFAbdomen.IsPrimaryKey = false;
				colvarEFAbdomen.IsForeignKey = false;
				colvarEFAbdomen.IsReadOnly = false;
				colvarEFAbdomen.DefaultSetting = @"";
				colvarEFAbdomen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFAbdomen);
				
				TableSchema.TableColumn colvarEFOsteoarticular = new TableSchema.TableColumn(schema);
				colvarEFOsteoarticular.ColumnName = "EFOsteoarticular";
				colvarEFOsteoarticular.DataType = DbType.Decimal;
				colvarEFOsteoarticular.MaxLength = 0;
				colvarEFOsteoarticular.AutoIncrement = false;
				colvarEFOsteoarticular.IsNullable = true;
				colvarEFOsteoarticular.IsPrimaryKey = false;
				colvarEFOsteoarticular.IsForeignKey = false;
				colvarEFOsteoarticular.IsReadOnly = false;
				colvarEFOsteoarticular.DefaultSetting = @"";
				colvarEFOsteoarticular.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFOsteoarticular);
				
				TableSchema.TableColumn colvarEFNeurologico = new TableSchema.TableColumn(schema);
				colvarEFNeurologico.ColumnName = "EFNeurologico";
				colvarEFNeurologico.DataType = DbType.Decimal;
				colvarEFNeurologico.MaxLength = 0;
				colvarEFNeurologico.AutoIncrement = false;
				colvarEFNeurologico.IsNullable = true;
				colvarEFNeurologico.IsPrimaryKey = false;
				colvarEFNeurologico.IsForeignKey = false;
				colvarEFNeurologico.IsReadOnly = false;
				colvarEFNeurologico.DefaultSetting = @"";
				colvarEFNeurologico.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEFNeurologico);
				
				TableSchema.TableColumn colvarVacunaCarne = new TableSchema.TableColumn(schema);
				colvarVacunaCarne.ColumnName = "VacunaCarne";
				colvarVacunaCarne.DataType = DbType.String;
				colvarVacunaCarne.MaxLength = 2;
				colvarVacunaCarne.AutoIncrement = false;
				colvarVacunaCarne.IsNullable = true;
				colvarVacunaCarne.IsPrimaryKey = false;
				colvarVacunaCarne.IsForeignKey = false;
				colvarVacunaCarne.IsReadOnly = false;
				colvarVacunaCarne.DefaultSetting = @"";
				colvarVacunaCarne.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVacunaCarne);
				
				TableSchema.TableColumn colvarVacunaCompleta = new TableSchema.TableColumn(schema);
				colvarVacunaCompleta.ColumnName = "VacunaCompleta";
				colvarVacunaCompleta.DataType = DbType.String;
				colvarVacunaCompleta.MaxLength = 2;
				colvarVacunaCompleta.AutoIncrement = false;
				colvarVacunaCompleta.IsNullable = true;
				colvarVacunaCompleta.IsPrimaryKey = false;
				colvarVacunaCompleta.IsForeignKey = false;
				colvarVacunaCompleta.IsReadOnly = false;
				colvarVacunaCompleta.DefaultSetting = @"";
				colvarVacunaCompleta.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVacunaCompleta);
				
				TableSchema.TableColumn colvarVacunaEscuela = new TableSchema.TableColumn(schema);
				colvarVacunaEscuela.ColumnName = "VacunaEscuela";
				colvarVacunaEscuela.DataType = DbType.String;
				colvarVacunaEscuela.MaxLength = 2;
				colvarVacunaEscuela.AutoIncrement = false;
				colvarVacunaEscuela.IsNullable = true;
				colvarVacunaEscuela.IsPrimaryKey = false;
				colvarVacunaEscuela.IsForeignKey = false;
				colvarVacunaEscuela.IsReadOnly = false;
				colvarVacunaEscuela.DefaultSetting = @"";
				colvarVacunaEscuela.ForeignKeyTableName = "";
				schema.Columns.Add(colvarVacunaEscuela);
				
				TableSchema.TableColumn colvarEstravismo = new TableSchema.TableColumn(schema);
				colvarEstravismo.ColumnName = "Estravismo";
				colvarEstravismo.DataType = DbType.String;
				colvarEstravismo.MaxLength = 2;
				colvarEstravismo.AutoIncrement = false;
				colvarEstravismo.IsNullable = true;
				colvarEstravismo.IsPrimaryKey = false;
				colvarEstravismo.IsForeignKey = false;
				colvarEstravismo.IsReadOnly = false;
				colvarEstravismo.DefaultSetting = @"";
				colvarEstravismo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstravismo);
				
				TableSchema.TableColumn colvarAgudezaVisualIzq = new TableSchema.TableColumn(schema);
				colvarAgudezaVisualIzq.ColumnName = "AgudezaVisualIzq";
				colvarAgudezaVisualIzq.DataType = DbType.Decimal;
				colvarAgudezaVisualIzq.MaxLength = 0;
				colvarAgudezaVisualIzq.AutoIncrement = false;
				colvarAgudezaVisualIzq.IsNullable = true;
				colvarAgudezaVisualIzq.IsPrimaryKey = false;
				colvarAgudezaVisualIzq.IsForeignKey = false;
				colvarAgudezaVisualIzq.IsReadOnly = false;
				colvarAgudezaVisualIzq.DefaultSetting = @"";
				colvarAgudezaVisualIzq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAgudezaVisualIzq);
				
				TableSchema.TableColumn colvarAgudezaVisualDer = new TableSchema.TableColumn(schema);
				colvarAgudezaVisualDer.ColumnName = "AgudezaVisualDer";
				colvarAgudezaVisualDer.DataType = DbType.Decimal;
				colvarAgudezaVisualDer.MaxLength = 0;
				colvarAgudezaVisualDer.AutoIncrement = false;
				colvarAgudezaVisualDer.IsNullable = true;
				colvarAgudezaVisualDer.IsPrimaryKey = false;
				colvarAgudezaVisualDer.IsForeignKey = false;
				colvarAgudezaVisualDer.IsReadOnly = false;
				colvarAgudezaVisualDer.DefaultSetting = @"";
				colvarAgudezaVisualDer.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAgudezaVisualDer);
				
				TableSchema.TableColumn colvarAudiometria = new TableSchema.TableColumn(schema);
				colvarAudiometria.ColumnName = "Audiometria";
				colvarAudiometria.DataType = DbType.String;
				colvarAudiometria.MaxLength = 50;
				colvarAudiometria.AutoIncrement = false;
				colvarAudiometria.IsNullable = true;
				colvarAudiometria.IsPrimaryKey = false;
				colvarAudiometria.IsForeignKey = false;
				colvarAudiometria.IsReadOnly = false;
				colvarAudiometria.DefaultSetting = @"";
				colvarAudiometria.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAudiometria);
				
				TableSchema.TableColumn colvarHipoacusia = new TableSchema.TableColumn(schema);
				colvarHipoacusia.ColumnName = "Hipoacusia";
				colvarHipoacusia.DataType = DbType.String;
				colvarHipoacusia.MaxLength = 2;
				colvarHipoacusia.AutoIncrement = false;
				colvarHipoacusia.IsNullable = true;
				colvarHipoacusia.IsPrimaryKey = false;
				colvarHipoacusia.IsForeignKey = false;
				colvarHipoacusia.IsReadOnly = false;
				colvarHipoacusia.DefaultSetting = @"";
				colvarHipoacusia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHipoacusia);
				
				TableSchema.TableColumn colvarTransFonacion = new TableSchema.TableColumn(schema);
				colvarTransFonacion.ColumnName = "TransFonacion";
				colvarTransFonacion.DataType = DbType.String;
				colvarTransFonacion.MaxLength = 2;
				colvarTransFonacion.AutoIncrement = false;
				colvarTransFonacion.IsNullable = true;
				colvarTransFonacion.IsPrimaryKey = false;
				colvarTransFonacion.IsForeignKey = false;
				colvarTransFonacion.IsReadOnly = false;
				colvarTransFonacion.DefaultSetting = @"";
				colvarTransFonacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransFonacion);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "Observaciones";
				colvarObservaciones.DataType = DbType.String;
				colvarObservaciones.MaxLength = 100;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				TableSchema.TableColumn colvarOdontoHabitosPernciosos = new TableSchema.TableColumn(schema);
				colvarOdontoHabitosPernciosos.ColumnName = "OdontoHabitosPernciosos";
				colvarOdontoHabitosPernciosos.DataType = DbType.String;
				colvarOdontoHabitosPernciosos.MaxLength = 2;
				colvarOdontoHabitosPernciosos.AutoIncrement = false;
				colvarOdontoHabitosPernciosos.IsNullable = true;
				colvarOdontoHabitosPernciosos.IsPrimaryKey = false;
				colvarOdontoHabitosPernciosos.IsForeignKey = false;
				colvarOdontoHabitosPernciosos.IsReadOnly = false;
				colvarOdontoHabitosPernciosos.DefaultSetting = @"";
				colvarOdontoHabitosPernciosos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOdontoHabitosPernciosos);
				
				TableSchema.TableColumn colvarOdontoMaloclusion = new TableSchema.TableColumn(schema);
				colvarOdontoMaloclusion.ColumnName = "OdontoMaloclusion";
				colvarOdontoMaloclusion.DataType = DbType.String;
				colvarOdontoMaloclusion.MaxLength = 2;
				colvarOdontoMaloclusion.AutoIncrement = false;
				colvarOdontoMaloclusion.IsNullable = true;
				colvarOdontoMaloclusion.IsPrimaryKey = false;
				colvarOdontoMaloclusion.IsForeignKey = false;
				colvarOdontoMaloclusion.IsReadOnly = false;
				colvarOdontoMaloclusion.DefaultSetting = @"";
				colvarOdontoMaloclusion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOdontoMaloclusion);
				
				TableSchema.TableColumn colvarOdontoFluorAplicado = new TableSchema.TableColumn(schema);
				colvarOdontoFluorAplicado.ColumnName = "OdontoFluorAplicado";
				colvarOdontoFluorAplicado.DataType = DbType.String;
				colvarOdontoFluorAplicado.MaxLength = 2;
				colvarOdontoFluorAplicado.AutoIncrement = false;
				colvarOdontoFluorAplicado.IsNullable = true;
				colvarOdontoFluorAplicado.IsPrimaryKey = false;
				colvarOdontoFluorAplicado.IsForeignKey = false;
				colvarOdontoFluorAplicado.IsReadOnly = false;
				colvarOdontoFluorAplicado.DefaultSetting = @"";
				colvarOdontoFluorAplicado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOdontoFluorAplicado);
				
				TableSchema.TableColumn colvarCariados = new TableSchema.TableColumn(schema);
				colvarCariados.ColumnName = "Cariados";
				colvarCariados.DataType = DbType.Decimal;
				colvarCariados.MaxLength = 0;
				colvarCariados.AutoIncrement = false;
				colvarCariados.IsNullable = true;
				colvarCariados.IsPrimaryKey = false;
				colvarCariados.IsForeignKey = false;
				colvarCariados.IsReadOnly = false;
				colvarCariados.DefaultSetting = @"";
				colvarCariados.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCariados);
				
				TableSchema.TableColumn colvarObstruidos = new TableSchema.TableColumn(schema);
				colvarObstruidos.ColumnName = "Obstruidos";
				colvarObstruidos.DataType = DbType.Decimal;
				colvarObstruidos.MaxLength = 0;
				colvarObstruidos.AutoIncrement = false;
				colvarObstruidos.IsNullable = true;
				colvarObstruidos.IsPrimaryKey = false;
				colvarObstruidos.IsForeignKey = false;
				colvarObstruidos.IsReadOnly = false;
				colvarObstruidos.DefaultSetting = @"";
				colvarObstruidos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObstruidos);
				
				TableSchema.TableColumn colvarDiente = new TableSchema.TableColumn(schema);
				colvarDiente.ColumnName = "Diente";
				colvarDiente.DataType = DbType.Decimal;
				colvarDiente.MaxLength = 0;
				colvarDiente.AutoIncrement = false;
				colvarDiente.IsNullable = true;
				colvarDiente.IsPrimaryKey = false;
				colvarDiente.IsForeignKey = false;
				colvarDiente.IsReadOnly = false;
				colvarDiente.DefaultSetting = @"";
				colvarDiente.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiente);
				
				TableSchema.TableColumn colvarC = new TableSchema.TableColumn(schema);
				colvarC.ColumnName = "C";
				colvarC.DataType = DbType.Decimal;
				colvarC.MaxLength = 0;
				colvarC.AutoIncrement = false;
				colvarC.IsNullable = true;
				colvarC.IsPrimaryKey = false;
				colvarC.IsForeignKey = false;
				colvarC.IsReadOnly = false;
				colvarC.DefaultSetting = @"";
				colvarC.ForeignKeyTableName = "";
				schema.Columns.Add(colvarC);
				
				TableSchema.TableColumn colvarUsaLentes = new TableSchema.TableColumn(schema);
				colvarUsaLentes.ColumnName = "UsaLentes";
				colvarUsaLentes.DataType = DbType.AnsiString;
				colvarUsaLentes.MaxLength = 2;
				colvarUsaLentes.AutoIncrement = false;
				colvarUsaLentes.IsNullable = true;
				colvarUsaLentes.IsPrimaryKey = false;
				colvarUsaLentes.IsForeignKey = false;
				colvarUsaLentes.IsReadOnly = false;
				colvarUsaLentes.DefaultSetting = @"";
				colvarUsaLentes.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUsaLentes);
				
				TableSchema.TableColumn colvarExtraidos = new TableSchema.TableColumn(schema);
				colvarExtraidos.ColumnName = "Extraidos";
				colvarExtraidos.DataType = DbType.Decimal;
				colvarExtraidos.MaxLength = 0;
				colvarExtraidos.AutoIncrement = false;
				colvarExtraidos.IsNullable = true;
				colvarExtraidos.IsPrimaryKey = false;
				colvarExtraidos.IsForeignKey = false;
				colvarExtraidos.IsReadOnly = false;
				colvarExtraidos.DefaultSetting = @"";
				colvarExtraidos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarExtraidos);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["RisProvider"].AddSchema("PSM_Datos_OLD",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdProsame")]
		[Bindable(true)]
		public decimal IdProsame 
		{
			get { return GetColumnValue<decimal>(Columns.IdProsame); }
			set { SetColumnValue(Columns.IdProsame, value); }
		}
		  
		[XmlAttribute("IdPaciente")]
		[Bindable(true)]
		public decimal IdPaciente 
		{
			get { return GetColumnValue<decimal>(Columns.IdPaciente); }
			set { SetColumnValue(Columns.IdPaciente, value); }
		}
		  
		[XmlAttribute("IdEfector")]
		[Bindable(true)]
		public decimal IdEfector 
		{
			get { return GetColumnValue<decimal>(Columns.IdEfector); }
			set { SetColumnValue(Columns.IdEfector, value); }
		}
		  
		[XmlAttribute("IdEstablecimiento")]
		[Bindable(true)]
		public decimal? IdEstablecimiento 
		{
			get { return GetColumnValue<decimal?>(Columns.IdEstablecimiento); }
			set { SetColumnValue(Columns.IdEstablecimiento, value); }
		}
		  
		[XmlAttribute("Prematuro")]
		[Bindable(true)]
		public string Prematuro 
		{
			get { return GetColumnValue<string>(Columns.Prematuro); }
			set { SetColumnValue(Columns.Prematuro, value); }
		}
		  
		[XmlAttribute("TutorDNI")]
		[Bindable(true)]
		public decimal? TutorDNI 
		{
			get { return GetColumnValue<decimal?>(Columns.TutorDNI); }
			set { SetColumnValue(Columns.TutorDNI, value); }
		}
		  
		[XmlAttribute("TutorNombre")]
		[Bindable(true)]
		public string TutorNombre 
		{
			get { return GetColumnValue<string>(Columns.TutorNombre); }
			set { SetColumnValue(Columns.TutorNombre, value); }
		}
		  
		[XmlAttribute("SobreEdad")]
		[Bindable(true)]
		public string SobreEdad 
		{
			get { return GetColumnValue<string>(Columns.SobreEdad); }
			set { SetColumnValue(Columns.SobreEdad, value); }
		}
		  
		[XmlAttribute("Repitente")]
		[Bindable(true)]
		public string Repitente 
		{
			get { return GetColumnValue<string>(Columns.Repitente); }
			set { SetColumnValue(Columns.Repitente, value); }
		}
		  
		[XmlAttribute("Peso")]
		[Bindable(true)]
		public decimal? Peso 
		{
			get { return GetColumnValue<decimal?>(Columns.Peso); }
			set { SetColumnValue(Columns.Peso, value); }
		}
		  
		[XmlAttribute("Talla")]
		[Bindable(true)]
		public decimal? Talla 
		{
			get { return GetColumnValue<decimal?>(Columns.Talla); }
			set { SetColumnValue(Columns.Talla, value); }
		}
		  
		[XmlAttribute("Imc")]
		[Bindable(true)]
		public decimal? Imc 
		{
			get { return GetColumnValue<decimal?>(Columns.Imc); }
			set { SetColumnValue(Columns.Imc, value); }
		}
		  
		[XmlAttribute("TaMax")]
		[Bindable(true)]
		public decimal? TaMax 
		{
			get { return GetColumnValue<decimal?>(Columns.TaMax); }
			set { SetColumnValue(Columns.TaMax, value); }
		}
		  
		[XmlAttribute("TaMin")]
		[Bindable(true)]
		public decimal? TaMin 
		{
			get { return GetColumnValue<decimal?>(Columns.TaMin); }
			set { SetColumnValue(Columns.TaMin, value); }
		}
		  
		[XmlAttribute("PercentiloPeso")]
		[Bindable(true)]
		public decimal? PercentiloPeso 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentiloPeso); }
			set { SetColumnValue(Columns.PercentiloPeso, value); }
		}
		  
		[XmlAttribute("PercentiloTalla")]
		[Bindable(true)]
		public decimal? PercentiloTalla 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentiloTalla); }
			set { SetColumnValue(Columns.PercentiloTalla, value); }
		}
		  
		[XmlAttribute("PercentiloIMC")]
		[Bindable(true)]
		public decimal? PercentiloIMC 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentiloIMC); }
			set { SetColumnValue(Columns.PercentiloIMC, value); }
		}
		  
		[XmlAttribute("PercentiloMax")]
		[Bindable(true)]
		public decimal? PercentiloMax 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentiloMax); }
			set { SetColumnValue(Columns.PercentiloMax, value); }
		}
		  
		[XmlAttribute("PercentiloMin")]
		[Bindable(true)]
		public decimal? PercentiloMin 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentiloMin); }
			set { SetColumnValue(Columns.PercentiloMin, value); }
		}
		  
		[XmlAttribute("EFPielFanera")]
		[Bindable(true)]
		public decimal? EFPielFanera 
		{
			get { return GetColumnValue<decimal?>(Columns.EFPielFanera); }
			set { SetColumnValue(Columns.EFPielFanera, value); }
		}
		  
		[XmlAttribute("EFCardiovascular")]
		[Bindable(true)]
		public decimal? EFCardiovascular 
		{
			get { return GetColumnValue<decimal?>(Columns.EFCardiovascular); }
			set { SetColumnValue(Columns.EFCardiovascular, value); }
		}
		  
		[XmlAttribute("EFRespiratorio")]
		[Bindable(true)]
		public decimal? EFRespiratorio 
		{
			get { return GetColumnValue<decimal?>(Columns.EFRespiratorio); }
			set { SetColumnValue(Columns.EFRespiratorio, value); }
		}
		  
		[XmlAttribute("EFGenital")]
		[Bindable(true)]
		public decimal? EFGenital 
		{
			get { return GetColumnValue<decimal?>(Columns.EFGenital); }
			set { SetColumnValue(Columns.EFGenital, value); }
		}
		  
		[XmlAttribute("EFAbdomen")]
		[Bindable(true)]
		public decimal? EFAbdomen 
		{
			get { return GetColumnValue<decimal?>(Columns.EFAbdomen); }
			set { SetColumnValue(Columns.EFAbdomen, value); }
		}
		  
		[XmlAttribute("EFOsteoarticular")]
		[Bindable(true)]
		public decimal? EFOsteoarticular 
		{
			get { return GetColumnValue<decimal?>(Columns.EFOsteoarticular); }
			set { SetColumnValue(Columns.EFOsteoarticular, value); }
		}
		  
		[XmlAttribute("EFNeurologico")]
		[Bindable(true)]
		public decimal? EFNeurologico 
		{
			get { return GetColumnValue<decimal?>(Columns.EFNeurologico); }
			set { SetColumnValue(Columns.EFNeurologico, value); }
		}
		  
		[XmlAttribute("VacunaCarne")]
		[Bindable(true)]
		public string VacunaCarne 
		{
			get { return GetColumnValue<string>(Columns.VacunaCarne); }
			set { SetColumnValue(Columns.VacunaCarne, value); }
		}
		  
		[XmlAttribute("VacunaCompleta")]
		[Bindable(true)]
		public string VacunaCompleta 
		{
			get { return GetColumnValue<string>(Columns.VacunaCompleta); }
			set { SetColumnValue(Columns.VacunaCompleta, value); }
		}
		  
		[XmlAttribute("VacunaEscuela")]
		[Bindable(true)]
		public string VacunaEscuela 
		{
			get { return GetColumnValue<string>(Columns.VacunaEscuela); }
			set { SetColumnValue(Columns.VacunaEscuela, value); }
		}
		  
		[XmlAttribute("Estravismo")]
		[Bindable(true)]
		public string Estravismo 
		{
			get { return GetColumnValue<string>(Columns.Estravismo); }
			set { SetColumnValue(Columns.Estravismo, value); }
		}
		  
		[XmlAttribute("AgudezaVisualIzq")]
		[Bindable(true)]
		public decimal? AgudezaVisualIzq 
		{
			get { return GetColumnValue<decimal?>(Columns.AgudezaVisualIzq); }
			set { SetColumnValue(Columns.AgudezaVisualIzq, value); }
		}
		  
		[XmlAttribute("AgudezaVisualDer")]
		[Bindable(true)]
		public decimal? AgudezaVisualDer 
		{
			get { return GetColumnValue<decimal?>(Columns.AgudezaVisualDer); }
			set { SetColumnValue(Columns.AgudezaVisualDer, value); }
		}
		  
		[XmlAttribute("Audiometria")]
		[Bindable(true)]
		public string Audiometria 
		{
			get { return GetColumnValue<string>(Columns.Audiometria); }
			set { SetColumnValue(Columns.Audiometria, value); }
		}
		  
		[XmlAttribute("Hipoacusia")]
		[Bindable(true)]
		public string Hipoacusia 
		{
			get { return GetColumnValue<string>(Columns.Hipoacusia); }
			set { SetColumnValue(Columns.Hipoacusia, value); }
		}
		  
		[XmlAttribute("TransFonacion")]
		[Bindable(true)]
		public string TransFonacion 
		{
			get { return GetColumnValue<string>(Columns.TransFonacion); }
			set { SetColumnValue(Columns.TransFonacion, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		  
		[XmlAttribute("OdontoHabitosPernciosos")]
		[Bindable(true)]
		public string OdontoHabitosPernciosos 
		{
			get { return GetColumnValue<string>(Columns.OdontoHabitosPernciosos); }
			set { SetColumnValue(Columns.OdontoHabitosPernciosos, value); }
		}
		  
		[XmlAttribute("OdontoMaloclusion")]
		[Bindable(true)]
		public string OdontoMaloclusion 
		{
			get { return GetColumnValue<string>(Columns.OdontoMaloclusion); }
			set { SetColumnValue(Columns.OdontoMaloclusion, value); }
		}
		  
		[XmlAttribute("OdontoFluorAplicado")]
		[Bindable(true)]
		public string OdontoFluorAplicado 
		{
			get { return GetColumnValue<string>(Columns.OdontoFluorAplicado); }
			set { SetColumnValue(Columns.OdontoFluorAplicado, value); }
		}
		  
		[XmlAttribute("Cariados")]
		[Bindable(true)]
		public decimal? Cariados 
		{
			get { return GetColumnValue<decimal?>(Columns.Cariados); }
			set { SetColumnValue(Columns.Cariados, value); }
		}
		  
		[XmlAttribute("Obstruidos")]
		[Bindable(true)]
		public decimal? Obstruidos 
		{
			get { return GetColumnValue<decimal?>(Columns.Obstruidos); }
			set { SetColumnValue(Columns.Obstruidos, value); }
		}
		  
		[XmlAttribute("Diente")]
		[Bindable(true)]
		public decimal? Diente 
		{
			get { return GetColumnValue<decimal?>(Columns.Diente); }
			set { SetColumnValue(Columns.Diente, value); }
		}
		  
		[XmlAttribute("C")]
		[Bindable(true)]
		public decimal? C 
		{
			get { return GetColumnValue<decimal?>(Columns.C); }
			set { SetColumnValue(Columns.C, value); }
		}
		  
		[XmlAttribute("UsaLentes")]
		[Bindable(true)]
		public string UsaLentes 
		{
			get { return GetColumnValue<string>(Columns.UsaLentes); }
			set { SetColumnValue(Columns.UsaLentes, value); }
		}
		  
		[XmlAttribute("Extraidos")]
		[Bindable(true)]
		public decimal? Extraidos 
		{
			get { return GetColumnValue<decimal?>(Columns.Extraidos); }
			set { SetColumnValue(Columns.Extraidos, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal varIdProsame,decimal varIdPaciente,decimal varIdEfector,decimal? varIdEstablecimiento,string varPrematuro,decimal? varTutorDNI,string varTutorNombre,string varSobreEdad,string varRepitente,decimal? varPeso,decimal? varTalla,decimal? varImc,decimal? varTaMax,decimal? varTaMin,decimal? varPercentiloPeso,decimal? varPercentiloTalla,decimal? varPercentiloIMC,decimal? varPercentiloMax,decimal? varPercentiloMin,decimal? varEFPielFanera,decimal? varEFCardiovascular,decimal? varEFRespiratorio,decimal? varEFGenital,decimal? varEFAbdomen,decimal? varEFOsteoarticular,decimal? varEFNeurologico,string varVacunaCarne,string varVacunaCompleta,string varVacunaEscuela,string varEstravismo,decimal? varAgudezaVisualIzq,decimal? varAgudezaVisualDer,string varAudiometria,string varHipoacusia,string varTransFonacion,string varObservaciones,string varOdontoHabitosPernciosos,string varOdontoMaloclusion,string varOdontoFluorAplicado,decimal? varCariados,decimal? varObstruidos,decimal? varDiente,decimal? varC,string varUsaLentes,decimal? varExtraidos)
		{
			PsmDatosOld item = new PsmDatosOld();
			
			item.IdProsame = varIdProsame;
			
			item.IdPaciente = varIdPaciente;
			
			item.IdEfector = varIdEfector;
			
			item.IdEstablecimiento = varIdEstablecimiento;
			
			item.Prematuro = varPrematuro;
			
			item.TutorDNI = varTutorDNI;
			
			item.TutorNombre = varTutorNombre;
			
			item.SobreEdad = varSobreEdad;
			
			item.Repitente = varRepitente;
			
			item.Peso = varPeso;
			
			item.Talla = varTalla;
			
			item.Imc = varImc;
			
			item.TaMax = varTaMax;
			
			item.TaMin = varTaMin;
			
			item.PercentiloPeso = varPercentiloPeso;
			
			item.PercentiloTalla = varPercentiloTalla;
			
			item.PercentiloIMC = varPercentiloIMC;
			
			item.PercentiloMax = varPercentiloMax;
			
			item.PercentiloMin = varPercentiloMin;
			
			item.EFPielFanera = varEFPielFanera;
			
			item.EFCardiovascular = varEFCardiovascular;
			
			item.EFRespiratorio = varEFRespiratorio;
			
			item.EFGenital = varEFGenital;
			
			item.EFAbdomen = varEFAbdomen;
			
			item.EFOsteoarticular = varEFOsteoarticular;
			
			item.EFNeurologico = varEFNeurologico;
			
			item.VacunaCarne = varVacunaCarne;
			
			item.VacunaCompleta = varVacunaCompleta;
			
			item.VacunaEscuela = varVacunaEscuela;
			
			item.Estravismo = varEstravismo;
			
			item.AgudezaVisualIzq = varAgudezaVisualIzq;
			
			item.AgudezaVisualDer = varAgudezaVisualDer;
			
			item.Audiometria = varAudiometria;
			
			item.Hipoacusia = varHipoacusia;
			
			item.TransFonacion = varTransFonacion;
			
			item.Observaciones = varObservaciones;
			
			item.OdontoHabitosPernciosos = varOdontoHabitosPernciosos;
			
			item.OdontoMaloclusion = varOdontoMaloclusion;
			
			item.OdontoFluorAplicado = varOdontoFluorAplicado;
			
			item.Cariados = varCariados;
			
			item.Obstruidos = varObstruidos;
			
			item.Diente = varDiente;
			
			item.C = varC;
			
			item.UsaLentes = varUsaLentes;
			
			item.Extraidos = varExtraidos;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(decimal varIdProsame,decimal varIdPaciente,decimal varIdEfector,decimal? varIdEstablecimiento,string varPrematuro,decimal? varTutorDNI,string varTutorNombre,string varSobreEdad,string varRepitente,decimal? varPeso,decimal? varTalla,decimal? varImc,decimal? varTaMax,decimal? varTaMin,decimal? varPercentiloPeso,decimal? varPercentiloTalla,decimal? varPercentiloIMC,decimal? varPercentiloMax,decimal? varPercentiloMin,decimal? varEFPielFanera,decimal? varEFCardiovascular,decimal? varEFRespiratorio,decimal? varEFGenital,decimal? varEFAbdomen,decimal? varEFOsteoarticular,decimal? varEFNeurologico,string varVacunaCarne,string varVacunaCompleta,string varVacunaEscuela,string varEstravismo,decimal? varAgudezaVisualIzq,decimal? varAgudezaVisualDer,string varAudiometria,string varHipoacusia,string varTransFonacion,string varObservaciones,string varOdontoHabitosPernciosos,string varOdontoMaloclusion,string varOdontoFluorAplicado,decimal? varCariados,decimal? varObstruidos,decimal? varDiente,decimal? varC,string varUsaLentes,decimal? varExtraidos)
		{
			PsmDatosOld item = new PsmDatosOld();
			
				item.IdProsame = varIdProsame;
			
				item.IdPaciente = varIdPaciente;
			
				item.IdEfector = varIdEfector;
			
				item.IdEstablecimiento = varIdEstablecimiento;
			
				item.Prematuro = varPrematuro;
			
				item.TutorDNI = varTutorDNI;
			
				item.TutorNombre = varTutorNombre;
			
				item.SobreEdad = varSobreEdad;
			
				item.Repitente = varRepitente;
			
				item.Peso = varPeso;
			
				item.Talla = varTalla;
			
				item.Imc = varImc;
			
				item.TaMax = varTaMax;
			
				item.TaMin = varTaMin;
			
				item.PercentiloPeso = varPercentiloPeso;
			
				item.PercentiloTalla = varPercentiloTalla;
			
				item.PercentiloIMC = varPercentiloIMC;
			
				item.PercentiloMax = varPercentiloMax;
			
				item.PercentiloMin = varPercentiloMin;
			
				item.EFPielFanera = varEFPielFanera;
			
				item.EFCardiovascular = varEFCardiovascular;
			
				item.EFRespiratorio = varEFRespiratorio;
			
				item.EFGenital = varEFGenital;
			
				item.EFAbdomen = varEFAbdomen;
			
				item.EFOsteoarticular = varEFOsteoarticular;
			
				item.EFNeurologico = varEFNeurologico;
			
				item.VacunaCarne = varVacunaCarne;
			
				item.VacunaCompleta = varVacunaCompleta;
			
				item.VacunaEscuela = varVacunaEscuela;
			
				item.Estravismo = varEstravismo;
			
				item.AgudezaVisualIzq = varAgudezaVisualIzq;
			
				item.AgudezaVisualDer = varAgudezaVisualDer;
			
				item.Audiometria = varAudiometria;
			
				item.Hipoacusia = varHipoacusia;
			
				item.TransFonacion = varTransFonacion;
			
				item.Observaciones = varObservaciones;
			
				item.OdontoHabitosPernciosos = varOdontoHabitosPernciosos;
			
				item.OdontoMaloclusion = varOdontoMaloclusion;
			
				item.OdontoFluorAplicado = varOdontoFluorAplicado;
			
				item.Cariados = varCariados;
			
				item.Obstruidos = varObstruidos;
			
				item.Diente = varDiente;
			
				item.C = varC;
			
				item.UsaLentes = varUsaLentes;
			
				item.Extraidos = varExtraidos;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdProsameColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPacienteColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdEfectorColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdEstablecimientoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PrematuroColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TutorDNIColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TutorNombreColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SobreEdadColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn RepitenteColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PesoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TallaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ImcColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn TaMaxColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TaMinColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentiloPesoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentiloTallaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentiloIMCColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentiloMaxColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentiloMinColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn EFPielFaneraColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn EFCardiovascularColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn EFRespiratorioColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn EFGenitalColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn EFAbdomenColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn EFOsteoarticularColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn EFNeurologicoColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn VacunaCarneColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn VacunaCompletaColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn VacunaEscuelaColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn EstravismoColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn AgudezaVisualIzqColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn AgudezaVisualDerColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn AudiometriaColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn HipoacusiaColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn TransFonacionColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn OdontoHabitosPernciososColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn OdontoMaloclusionColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn OdontoFluorAplicadoColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn CariadosColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn ObstruidosColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn DienteColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn CColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn UsaLentesColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn ExtraidosColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdProsame = @"idProsame";
			 public static string IdPaciente = @"idPaciente";
			 public static string IdEfector = @"idEfector";
			 public static string IdEstablecimiento = @"idEstablecimiento";
			 public static string Prematuro = @"Prematuro";
			 public static string TutorDNI = @"TutorDNI";
			 public static string TutorNombre = @"TutorNombre";
			 public static string SobreEdad = @"SobreEdad";
			 public static string Repitente = @"Repitente";
			 public static string Peso = @"Peso";
			 public static string Talla = @"Talla";
			 public static string Imc = @"IMC";
			 public static string TaMax = @"TaMax";
			 public static string TaMin = @"TaMin";
			 public static string PercentiloPeso = @"PercentiloPeso";
			 public static string PercentiloTalla = @"PercentiloTalla";
			 public static string PercentiloIMC = @"PercentiloIMC";
			 public static string PercentiloMax = @"PercentiloMax";
			 public static string PercentiloMin = @"PercentiloMin";
			 public static string EFPielFanera = @"EFPielFanera";
			 public static string EFCardiovascular = @"EFCardiovascular";
			 public static string EFRespiratorio = @"EFRespiratorio";
			 public static string EFGenital = @"EFGenital";
			 public static string EFAbdomen = @"EFAbdomen";
			 public static string EFOsteoarticular = @"EFOsteoarticular";
			 public static string EFNeurologico = @"EFNeurologico";
			 public static string VacunaCarne = @"VacunaCarne";
			 public static string VacunaCompleta = @"VacunaCompleta";
			 public static string VacunaEscuela = @"VacunaEscuela";
			 public static string Estravismo = @"Estravismo";
			 public static string AgudezaVisualIzq = @"AgudezaVisualIzq";
			 public static string AgudezaVisualDer = @"AgudezaVisualDer";
			 public static string Audiometria = @"Audiometria";
			 public static string Hipoacusia = @"Hipoacusia";
			 public static string TransFonacion = @"TransFonacion";
			 public static string Observaciones = @"Observaciones";
			 public static string OdontoHabitosPernciosos = @"OdontoHabitosPernciosos";
			 public static string OdontoMaloclusion = @"OdontoMaloclusion";
			 public static string OdontoFluorAplicado = @"OdontoFluorAplicado";
			 public static string Cariados = @"Cariados";
			 public static string Obstruidos = @"Obstruidos";
			 public static string Diente = @"Diente";
			 public static string C = @"C";
			 public static string UsaLentes = @"UsaLentes";
			 public static string Extraidos = @"Extraidos";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
